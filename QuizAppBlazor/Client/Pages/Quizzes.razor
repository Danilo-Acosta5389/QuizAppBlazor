@page "/quizzes"
@using Blazored.LocalStorage;
@using QuizAppBlazor.Shared.DTOs
@inject HttpClient Http
@* inject ILocalStorageService _localStorageService *@
@inject NavigationManager Navigation

<div class="d-flex flex-column">
    <h1 class="align-self-center title flex-wrap">Pick a quiz!</h1>
    <div class="d-flex flex-wrap align-self-center justify-content-center">
        @if (quizzes == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var quiz in quizzes)
            {
                //Console.WriteLine(storedItem);
                
                <div class="card btn btn-primary" style="width: 18rem; margin: 15px;" @onclick="() => RedirectToQuiz(quiz.Id)">
                    <div class="card-body">
                        <h5 class="card-title">@quiz.Title</h5>
                        <p class="card-text">@quiz.Description</p>
                    </div>
                </div>
                //_localStorageService.ClearAsync();
            }
        }
    </div>
</div>




@code {
    private GetQuizDTO[]? quizzes;
    protected override async Task OnInitializedAsync()
    {
        quizzes = await Http.GetFromJsonAsync<GetQuizDTO[]>("api/quiz");
        //await _localStorageService.ClearAsync();
    }

    private void RedirectToQuiz(Guid id)
    {
        //_localStorageService.SetItemAsync<Guid>("QuizId", id);
        //Console.WriteLine("LS item is: " + id);
        Navigation.NavigateTo($"/quiz/{id}");

    }
}
